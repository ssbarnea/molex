# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build-linux:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # - run:
      #     name: install dependencies
      #     command: |
      #       tox

      - save_cache:
          paths:
            - ./.tox
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            python --version
            tox

      # - store_artifacts:
      #     path: test-reports
      #     destination: test-reports

  build-macos:

    # Specify the Xcode version to use
    macos:
      xcode: "8.3.3"

    steps:
      - checkout

      # Build the app and run tests
      - run:
          name: Build and run tests
          command: python --version
          # environment:
          #   SCAN_DEVICE: iPhone 6
          #   SCAN_SCHEME: WebTests

      # Collect XML test results data to show in the UI,
      # and save the same XML files under test-results folder
      # in the Artifacts tab
      # - store_test_results:
      #     path: test_output/report.xml
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: scan-test-results
      # - store_artifacts:
      #     path: ~/Library/Logs/scan
      #     destination: scan-logs
